{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1OHQPW8yeqKq_m2-o0wOYo2DZKsi0OIhd","timestamp":1678812607307},{"file_id":"1bUu1ye5G_t3jLcE18CEhL9jn7vK4t3mM","timestamp":1647550573567}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"zbrMqMPyncTC"},"source":["# **Tarea 1 - CC6205 Natural Language Processing üìö**\n","\n","**Integrantes:**\n","\n","**Fecha l√≠mite de entrega üìÜ:** Martes 4 de Abril.\n","\n","**Tiempo estimado de dedicaci√≥n:**\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"D1HFX-9PpxF9"},"source":["` `\n","\n","\n","Bienvenid@s a la primera tarea en el curso de Natural Language Processing (NLP). Esta tarea tiene como objetivo evaluar los contenidos te√≥ricos de las primeras semanas de clases, enfocado principalmente en ***Information Retrieval (IR)*** y ***Vector Space Models***. Si a√∫n no han visto las clases, se recomienda visitar los links de las referencias.\n","\n","La tarea consta de una parte te√≥rica que busca evaluar conceptos vistos en clases. Seguido por una parte pr√°ctica con el f√≠n de introducirlos a la programaci√≥n en Python enfocada en NLP.\n","\n","` `\n","\n","\n","\n","\n","**Instrucciones:**\n","- La tarea se realiza en grupos de **m√°ximo** 2 personas. Puede ser invidivual pero no es recomendable.\n","- La entrega es a trav√©s de u-cursos a m√°s tardar el d√≠a estipulado arriba. No se aceptan atrasos.\n","- El formato de entrega es este mismo Jupyter Notebook.\n","- Al momento de la revisi√≥n tu c√≥digo ser√° ejecutado. Por favor verifica que tu entrega no tenga errores de compilaci√≥n.\n","- Est√° **PROHIBIDO** usar cualquier librer√≠a que implemente los algoritmos pedidos (Spacy, scikit, etc). S√≥lo se podr√°n utilizar las librer√≠as importadas al inicio de la secci√≥n de pr√°ctica.\n","- En el horario de auxiliar pueden realizar consultas acerca de la tarea a trav√©s del canal de Discord del curso.\n","\n","\n","\n","Ahora s√≠, empecemos! üòÑüöÄ\n","\n","` `\n","\n","**Referencias:**\n","\n","\n","Slides:\n","    \n","- [Introducci√≥n al curso](https://github.com/dccuchile/CC6205/blob/master/slides/NLP-introduction.pdf)\n","- [Vector Space Model / Information Retrieval](https://github.com/dccuchile/CC6205/blob/master/slides/NLP-IR.pdf)    \n","\n","Videos:\n","\n","- [CC6205 - Procesamiento de Lenguaje Natural: CC6205 - Procesamiento de Lenguaje Natural: Introducci√≥n parte I](https://www.youtube.com/watch?v=HEKTNOttGvU)\n","- [CC6205 - Procesamiento de Lenguaje Natural: CC6205 - Procesamiento de Lenguaje Natural: Introducci√≥n parte II](https://www.youtube.com/watch?v=P8cwnI-f-Kg)\n","- [CC6205 - Procesamiento de Lenguaje Natural: Vector Space Model and Information Retrieval parte 1](https://youtu.be/FXIVClF370w)\n","- [CC6205 - Procesamiento de Lenguaje Natural: Vector Space Model and Information Retrieval parte 2](https://youtu.be/f8nG1EMmPZk)\n","\n","` `\n","\n"]},{"cell_type":"markdown","metadata":{"id":"hJshpe1yrKJr"},"source":["## **1 - Preguntas te√≥ricas üìï (2 puntos).** ##\n","\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"MBEDKXBPoA7w"},"source":["Las siguientes celdas contienen preguntas acerca del contenido visto en clases y en el material del curso.  Contestar cada pregunta en su celda correspondiente y **no extenderse m√°s de 100 palabras** . üôè\n","` `"]},{"cell_type":"markdown","metadata":{"id":"xNJPR1kMrw9R"},"source":["**Pregunta 1 (0.2 puntos): ¬øPor qu√© el an√°lisis del lenguaje humano es una tarea compleja? Mencione dos razones seg√∫n lo visto en clases. Debe citar la slide donde cree que est√° la respuesta.**\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"mlTBYHEptdde"},"source":["` `\n","Porque es extremadamente complejo entender formalmente y describir las reglas que rigen el lenguaje. El lenguaje humano es muy ambiguo y es din√°mico.\n","Presentaci√≥n \"Natural Language Processing Introduction\", diapositivas 16 y 22.\n","` `"]},{"cell_type":"markdown","metadata":{"id":"tVMXilrYsiSZ"},"source":["**Pregunta 2 (0.4 puntos): ¬øCu√°les son las diferencias entre usar Deep learning y Machine Learning cl√°sico (empirismo) para un problema de NLP? Ejemplifique con alguna task.** Puede utilizar ChatGPT (debe indicarlo) para generar la respuesta y luego debe indicar si la respuesta entregada por ChatGPT es correcta o no. Mencione por qu√© seg√∫n lo visto en clases.\n"]},{"cell_type":"markdown","metadata":{"id":"_QXWMzpTtBZL"},"source":["` `\n","En machine learning cl√°sico el desarrollador deb√≠a crear por el mismo las caracter√≠sticas/representaciones. En deep learning, estas representaciones son aprendidas por los mismos algoritmos.\n","` `"]},{"cell_type":"markdown","source":[" **Pregunta 3 (0.4 puntos) Seg√∫n las primeras clases, ¬øQu√© m√©todo cl√°sico nos permite rankear las similitudes existentes entre documentos?, ¬øC√≥mo son las representaciones que genera y problemas que podr√≠an experimentar estas soluciones simples?**"],"metadata":{"id":"XXc4XuVG7Loa"}},{"cell_type":"markdown","source":["` `\n","Similitud coseno, y que expanden la idea.\n","\n","Diapo Vector Space Model / Information Retrieval 12-16 aprox.\n","\n","` `"],"metadata":{"id":"rtaQ_aVE8LhH"}},{"cell_type":"markdown","source":["**Pregunta 4 (0.4 puntos) Usted se encuentra realizando un modelo de clasificaci√≥n de sentimientos con texto, su jefe le se√±ala que debe eliminar las palabras mas comunes para obtener una mejor clasificaci√≥n. ¬øQu√© palabras le se√±ala que elimine su jefe?, ¬øes acaso esto una buena idea?.** Puede utilizar ChatGPT (debe indicarlo) para generar la respuesta y luego debe indicar si la respuesta entregada por ChatGPT es correcta o no. Mencione por qu√© seg√∫n lo visto en clases.\n","\n","Esta respuesta es un gran depende, debido a que la clasificaci√≥n de sentimientos depende mucho en el corpus de entrenamiento utilizado, un corpus podr√≠a favorecer la clasificaci√≥n y otro empeorarla. Mucho m√©todos de los vistos en clases se basan en el conteo de frecuencias dentro del corpus, sin embargo en un corpus de texto dependiendo del idioma existente muchas palabras que no aportan mucha informaci√≥n a la clasificaci√≥n. Pero ejemplo palabras en ingl√©s como \"the\" o \"a\" no aportan mucha informaci√≥n. Aun as√≠, esto podr√≠a ser una buena idea ya que permitir√° reducir el vocabulario y la dimension de los vectores (considerando el modelo bow) y as√≠ mejorar la clasificaci√≥n."],"metadata":{"id":"EKNDNy047tcY"}},{"cell_type":"markdown","source":["` `\n","Respuesta aqu√≠\n","` `"],"metadata":{"id":"cRe4QaGS8MqY"}},{"cell_type":"markdown","source":["**Pregunta 5 (0.6 puntos): Acorde al paper [A Vector Space Model for automatic indexing](https://dl.acm.org/doi/pdf/10.1145/361219.361220) un documento, $D_i$, puede ser definido formalmente como una tupla de t√©rminos, $(d_{i1}, d_{i2}, ..., d_{in})$, donde $d_{ij}$ representa el peso del j-esimo t√©rmino. En clase vieron algunas formas medir los pesos de estos t√©rminos. Mencione cuales fueron y sus ventajas y desventajas (pueden responder en m√°ximo 150 palabras).**"],"metadata":{"id":"uPkWmrmLHWnQ"}},{"cell_type":"markdown","source":["` `\n","En la teor√≠a de recuperaci√≥n de informaci√≥n, se han propuesto diversas medidas para medir la importancia de los t√©rminos en un documento. A continuaci√≥n, se describen algunas de ellas junto con sus ventajas y desventajas:\n","\n","- Frecuencia del t√©rmino en el documento (TF): Esta medida asigna el peso del t√©rmino en el documento como la frecuencia del t√©rmino en el documento. Es decir, cuanto m√°s frecuente sea el t√©rmino en el documento, mayor ser√° su peso. La ventaja de esta medida es su simplicidad y facilidad de implementaci√≥n. Sin embargo, no tiene en cuenta la importancia del t√©rmino en relaci√≥n con otros documentos.\n","\n","- Frecuencia inversa del documento (IDF): Esta medida asigna el peso del t√©rmino en el documento como el logaritmo del n√∫mero total de documentos dividido por el n√∫mero de documentos que contienen el t√©rmino. Es decir, cuanto menos frecuente sea el t√©rmino en los documentos, mayor ser√° su peso. La ventaja de esta medida es que tiene en cuenta la importancia del t√©rmino en relaci√≥n con otros documentos, pero no tiene en cuenta la frecuencia del t√©rmino en el documento.\n","\n","- TF-IDF: Esta medida combina la frecuencia del t√©rmino en el documento (TF) con la frecuencia inversa del documento (IDF) asignando un peso multiplicativo a cada t√©rmino. Es decir, los t√©rminos que aparecen con frecuencia en un documento, pero raramente en otros, tienen un peso alto. La ventaja de esta medida es que tiene en cuenta tanto la frecuencia del t√©rmino en el documento como su importancia en relaci√≥n con otros documentos.\n","` `"],"metadata":{"id":"JLqRTW08SzDN"}},{"cell_type":"markdown","metadata":{"id":"6Fpsz2pQt8x5"},"source":["## **2 - Preguntas pr√°cticas üíª (4 puntos).** ##"]},{"cell_type":"markdown","metadata":{"id":"YB92kQXspvbR"},"source":["Esta segunda secci√≥n incluye ejercicios de programaci√≥n ü§ô. Leer atentamente las instrucciones entregadas a continuaci√≥n para facilitar el proceso de revisi√≥n de sus trabajos.\n"]},{"cell_type":"markdown","metadata":{"id":"PosWgWgRxHKp"},"source":["` `\n","\n","**Instrucciones:**\n","\n","\n","\n","- Escribe tu c√≥digo entre las lineas de comentarios **### Aqu√≠ inicia tu c√≥digo ###** y **### Aqu√≠ termina tu c√≥digo ###**.\n","- Cuando el ejercicio incluya un bloque llamado ***Test***, comprueba que el resultado de la ejecuci√≥n coincida con el resultado esperado.\n","- Recuerde siempre mantener buenas pr√°cticas de c√≥digo.\n","- Est√° permitido s√≥lo utilizar las librer√≠as importadas antes del Ejercicio 1.\n","- **Recordar** que: *Documento = Oraci√≥n. Dataset = Corpus. Vocabulario = Tokens*.\n","- El **orden de los resultados** pueden variar dependiendo de su m√°quina, pero los valores de los resultados son los mismos.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"jBrmFHXhqUww"},"source":["**Ejemplo:** Implemente una funci√≥n **`hello_world()`** que imprima en pantalla `\"Hello World\"`."]},{"cell_type":"code","metadata":{"id":"tu7cIsawyJHx"},"source":["def hello_world():\n","  ### Aqu√≠ inicia tu c√≥digo ###\n","  print(\"Hello World\")\n","  ### Aqu√≠ termina tu c√≥digo ###"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fz6klw12lwbW"},"source":["***Test:***"]},{"cell_type":"code","metadata":{"id":"ac-WMk2dyQbp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681443308998,"user_tz":240,"elapsed":10,"user":{"displayName":"Consuelo Rojas","userId":"01251266957192768061"}},"outputId":"1f8c3abc-5f06-4f09-9de9-e6798619915a"},"source":["hello_world()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello World\n"]}]},{"cell_type":"markdown","metadata":{"id":"fIoiAMxtyUjQ"},"source":["***Resultado esperado***:\n","<table>\n","    <tr>\n","        <td> Hello World </td>\n","    </tr>\n","</table>\n","\n","``\n","``\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"dlPyrPXiH0l4"},"source":["Estas son las librer√≠as permitidas. Si quieren utilizar alguna librer√≠a adicional, pueden realizar la consulta a trav√©s de Discord."]},{"cell_type":"code","metadata":{"id":"CtP6Emjo1kF0"},"source":["import codecs\n","import re\n","import numpy as np\n","import pandas as pd"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["En caso de desarrollar la tarea desde colab, utilizar el siguiente c√≥digo para cargar los archivos desde el drive:"],"metadata":{"id":"Bj9Do0LdC9w2"}},{"cell_type":"code","source":["try:\n","    from google.colab import drive\n","\n","    drive.mount(\"/content/drive\", force_remount=True)\n","    path = '/content/drive/MyDrive/nlp/marcianeke.txt'\n","except:\n","    print('Ignorando conexi√≥n drive-colab')"],"metadata":{"id":"9EXq1VDeC-ml","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681443315655,"user_tz":240,"elapsed":6663,"user":{"displayName":"Consuelo Rojas","userId":"01251266957192768061"}},"outputId":"3a512d34-9747-4911-c6b1-1259b67197ef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","metadata":{"id":"tSN4bBoY2Td4"},"source":["` `\n","\n","**Ejercicio 1 - *Tokenizaci√≥n* (0.5 puntos).**\n","` `  \n","` `\n","\n","En el primer ejercicio veremos la dificultad üò® de tokenizar textos no estructurados, destacando la importancia de tener librer√≠as que realicen este trabajo.\n","\n","El archivo adjunto al enunciado de la tarea contiene la letra de una canci√≥n del marcianeke üëΩ. Utilice este texto para realizar su primera tokenizaci√≥n y ver qu√© tan bien funciona su funci√≥n.\n","\n","Ejecute el c√≥digo a continuaci√≥n para cargar el ejemplo. Recuerde realizar la modificaci√≥n al directorio en caso que el archivo no se encuentre en el mismo directorio del Jupyter Notebook."]},{"cell_type":"code","metadata":{"id":"FnNUYlWo21g4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681443315656,"user_tz":240,"elapsed":19,"user":{"displayName":"Consuelo Rojas","userId":"01251266957192768061"}},"outputId":"4c6dfdba-527b-4650-da30-455013d5d572"},"source":["text = codecs.open('marcianeke.txt', 'r', 'UTF-8').read()\n","print(text)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Brr\r\n","Marcianeke\r\n","Vamo' a estar con Pailita\r\n","Dimelo m√°\r\n","Ando en busca de una criminal (ah, ah)\r\n","Esa que el gatillo le gusta jalar (rata-ta)\r\n","Que le guste flotar y fumar (brr)\r\n","Tussi, keta quiere' mezclar\r\n","Dimelo m√°\r\n","\r\n","Ando en busca de una criminal (ah, ah)\r\n","Esa que el gatillo le gusta jalar (rata-ta)\r\n","Que le guste flotar y fumar\r\n","Tussi, keta pura quiere' mezclar\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","\r\n","Esperame que ahora entro yo\r\n","Y lo que pide yo lo traje\r\n","No visto de traje\r\n","Puro corte calle, no de maquillaje\r\n","Pronto coronamos y nos vamo' de viaje\r\n","Tanto hit que hago que lo' culo bajen\r\n","Ella se va de shopping\r\n","Sale positivo si se hace el doping\r\n","Baila twerk con un poco de popping\r\n","Los fardos en el bot√≠n\r\n","\r\n","Si quieren letra llamen pa' mi booking\r\n","Generando, sigo en la m√≠a lowkey\r\n","Cooking en el estudio con tu woman\r\n","Tanto whisky, pisco que hasta lo' vecinos toman\r\n","Si se tiran pa' aca puede que la arena coman\r\n","Ja, en el chanteo titulado sin diploma\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","Di-dimelo m√°\r\n","\r\n","Ah, pe-peligrosa\r\n","Quiero ver como perreando me acosa\r\n","Eso de atra' con el Gucci me lo roza\r\n","Tengo tussi del naranjo me aburrio el rosa\r\n","Capaz que tosa con el blunt\r\n","Sprite con Flemibron\r\n","Louis Vuitton, le quito la polera Champion\r\n","A tu pretendiente con la fory lo espanto\r\n","Puro perro, le doy de comer Champion Dog\r\n","Ese toto lo corono yo\r\n","La movie en play no hay stop\r\n","Flow de sobra no hay stock\r\n","Me la topo en la disco queda en shock\r\n","My love, rica en las redes y en persona\r\n","No usa Photoshop\r\n","La llevo a comprar blone' al growshop\r\n","En ropa interior los do'\r\n","Me roza su vicky con mi boxer Top\r\n","Dimelo m√°\r\n","Ando en busca de una cri\r\n","minal (ah, ah)\r\n","Esa que el gatillo le gusta jalar (rata-ta)\r\n","Que le guste flotar y fumar\r\n","Tussi, keta quiere' mezclar\r\n","Dimelo m√°\r\n","\r\n","Ando en busca de una criminal (ah, ah)\r\n","Esa que el gatillo le gusta jalar (rata-ta)\r\n","Que le guste flotar y fumar\r\n","Tussi, keta pura quiere' mezclar\r\n","Marcianeke, Pailita\r\n","Young Varas\n"]}]},{"cell_type":"markdown","metadata":{"id":"UIaOYzMk3v1X"},"source":["Implementen una funci√≥n **`get_tokens()`** que reciba un texto y entregue una lista con sus tokens. Son libres de elegir la forma de tokenizar mientras no utilicen librer√≠as con tokenizadores ya implementados. Pueden utilizar la librer√≠a **re** importada para trabajar s√≠mbolos.\n"]},{"cell_type":"markdown","metadata":{"id":"5dl42-hgIhqB"},"source":["Ejemplo de uso:\n","\n","`get_tokens('Este es un ejemplo de prueba.')`\n","\n","Nos entregar√≠a:\n","\n","`['Este', 'es', 'un', 'ejemplo', 'de', 'prueba', '.']`"]},{"cell_type":"code","metadata":{"id":"IF1RcIwq4G2x"},"source":["def get_tokens(text):\n","  ### Inicio del c√≥digo ###\n","\n","  tokens = []\n","  tokenizer = re.compile(r'([^\\W_]+|.)')\n","  for line in text.splitlines():\n","    tokens += [t for t in tokenizer.split(line) if t.strip()!='']\n","  return tokens\n","\n","  ### Fin del c√≥digo ###"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KqlSpefv4_EH","executionInfo":{"status":"ok","timestamp":1681443315657,"user_tz":240,"elapsed":14,"user":{"displayName":"Consuelo Rojas","userId":"01251266957192768061"}},"outputId":"3f631121-364b-4d09-9ae2-d9c79c84303d","colab":{"base_uri":"https://localhost:8080/"}},"source":["tokens = get_tokens(text)\n","tokens"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Brr',\n"," 'Marcianeke',\n"," 'Vamo',\n"," \"'\",\n"," 'a',\n"," 'estar',\n"," 'con',\n"," 'Pailita',\n"," 'Dimelo',\n"," 'm√°',\n"," 'Ando',\n"," 'en',\n"," 'busca',\n"," 'de',\n"," 'una',\n"," 'criminal',\n"," '(',\n"," 'ah',\n"," ',',\n"," 'ah',\n"," ')',\n"," 'Esa',\n"," 'que',\n"," 'el',\n"," 'gatillo',\n"," 'le',\n"," 'gusta',\n"," 'jalar',\n"," '(',\n"," 'rata',\n"," '-',\n"," 'ta',\n"," ')',\n"," 'Que',\n"," 'le',\n"," 'guste',\n"," 'flotar',\n"," 'y',\n"," 'fumar',\n"," '(',\n"," 'brr',\n"," ')',\n"," 'Tussi',\n"," ',',\n"," 'keta',\n"," 'quiere',\n"," \"'\",\n"," 'mezclar',\n"," 'Dimelo',\n"," 'm√°',\n"," 'Ando',\n"," 'en',\n"," 'busca',\n"," 'de',\n"," 'una',\n"," 'criminal',\n"," '(',\n"," 'ah',\n"," ',',\n"," 'ah',\n"," ')',\n"," 'Esa',\n"," 'que',\n"," 'el',\n"," 'gatillo',\n"," 'le',\n"," 'gusta',\n"," 'jalar',\n"," '(',\n"," 'rata',\n"," '-',\n"," 'ta',\n"," ')',\n"," 'Que',\n"," 'le',\n"," 'guste',\n"," 'flotar',\n"," 'y',\n"," 'fumar',\n"," 'Tussi',\n"," ',',\n"," 'keta',\n"," 'pura',\n"," 'quiere',\n"," \"'\",\n"," 'mezclar',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Esperame',\n"," 'que',\n"," 'ahora',\n"," 'entro',\n"," 'yo',\n"," 'Y',\n"," 'lo',\n"," 'que',\n"," 'pide',\n"," 'yo',\n"," 'lo',\n"," 'traje',\n"," 'No',\n"," 'visto',\n"," 'de',\n"," 'traje',\n"," 'Puro',\n"," 'corte',\n"," 'calle',\n"," ',',\n"," 'no',\n"," 'de',\n"," 'maquillaje',\n"," 'Pronto',\n"," 'coronamos',\n"," 'y',\n"," 'nos',\n"," 'vamo',\n"," \"'\",\n"," 'de',\n"," 'viaje',\n"," 'Tanto',\n"," 'hit',\n"," 'que',\n"," 'hago',\n"," 'que',\n"," 'lo',\n"," \"'\",\n"," 'culo',\n"," 'bajen',\n"," 'Ella',\n"," 'se',\n"," 'va',\n"," 'de',\n"," 'shopping',\n"," 'Sale',\n"," 'positivo',\n"," 'si',\n"," 'se',\n"," 'hace',\n"," 'el',\n"," 'doping',\n"," 'Baila',\n"," 'twerk',\n"," 'con',\n"," 'un',\n"," 'poco',\n"," 'de',\n"," 'popping',\n"," 'Los',\n"," 'fardos',\n"," 'en',\n"," 'el',\n"," 'bot√≠n',\n"," 'Si',\n"," 'quieren',\n"," 'letra',\n"," 'llamen',\n"," 'pa',\n"," \"'\",\n"," 'mi',\n"," 'booking',\n"," 'Generando',\n"," ',',\n"," 'sigo',\n"," 'en',\n"," 'la',\n"," 'm√≠a',\n"," 'lowkey',\n"," 'Cooking',\n"," 'en',\n"," 'el',\n"," 'estudio',\n"," 'con',\n"," 'tu',\n"," 'woman',\n"," 'Tanto',\n"," 'whisky',\n"," ',',\n"," 'pisco',\n"," 'que',\n"," 'hasta',\n"," 'lo',\n"," \"'\",\n"," 'vecinos',\n"," 'toman',\n"," 'Si',\n"," 'se',\n"," 'tiran',\n"," 'pa',\n"," \"'\",\n"," 'aca',\n"," 'puede',\n"," 'que',\n"," 'la',\n"," 'arena',\n"," 'coman',\n"," 'Ja',\n"," ',',\n"," 'en',\n"," 'el',\n"," 'chanteo',\n"," 'titulado',\n"," 'sin',\n"," 'diploma',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Ah',\n"," ',',\n"," 'pe',\n"," '-',\n"," 'peligrosa',\n"," 'Quiero',\n"," 'ver',\n"," 'como',\n"," 'perreando',\n"," 'me',\n"," 'acosa',\n"," 'Eso',\n"," 'de',\n"," 'atra',\n"," \"'\",\n"," 'con',\n"," 'el',\n"," 'Gucci',\n"," 'me',\n"," 'lo',\n"," 'roza',\n"," 'Tengo',\n"," 'tussi',\n"," 'del',\n"," 'naranjo',\n"," 'me',\n"," 'aburrio',\n"," 'el',\n"," 'rosa',\n"," 'Capaz',\n"," 'que',\n"," 'tosa',\n"," 'con',\n"," 'el',\n"," 'blunt',\n"," 'Sprite',\n"," 'con',\n"," 'Flemibron',\n"," 'Louis',\n"," 'Vuitton',\n"," ',',\n"," 'le',\n"," 'quito',\n"," 'la',\n"," 'polera',\n"," 'Champion',\n"," 'A',\n"," 'tu',\n"," 'pretendiente',\n"," 'con',\n"," 'la',\n"," 'fory',\n"," 'lo',\n"," 'espanto',\n"," 'Puro',\n"," 'perro',\n"," ',',\n"," 'le',\n"," 'doy',\n"," 'de',\n"," 'comer',\n"," 'Champion',\n"," 'Dog',\n"," 'Ese',\n"," 'toto',\n"," 'lo',\n"," 'corono',\n"," 'yo',\n"," 'La',\n"," 'movie',\n"," 'en',\n"," 'play',\n"," 'no',\n"," 'hay',\n"," 'stop',\n"," 'Flow',\n"," 'de',\n"," 'sobra',\n"," 'no',\n"," 'hay',\n"," 'stock',\n"," 'Me',\n"," 'la',\n"," 'topo',\n"," 'en',\n"," 'la',\n"," 'disco',\n"," 'queda',\n"," 'en',\n"," 'shock',\n"," 'My',\n"," 'love',\n"," ',',\n"," 'rica',\n"," 'en',\n"," 'las',\n"," 'redes',\n"," 'y',\n"," 'en',\n"," 'persona',\n"," 'No',\n"," 'usa',\n"," 'Photoshop',\n"," 'La',\n"," 'llevo',\n"," 'a',\n"," 'comprar',\n"," 'blone',\n"," \"'\",\n"," 'al',\n"," 'growshop',\n"," 'En',\n"," 'ropa',\n"," 'interior',\n"," 'los',\n"," 'do',\n"," \"'\",\n"," 'Me',\n"," 'roza',\n"," 'su',\n"," 'vicky',\n"," 'con',\n"," 'mi',\n"," 'boxer',\n"," 'Top',\n"," 'Dimelo',\n"," 'm√°',\n"," 'Ando',\n"," 'en',\n"," 'busca',\n"," 'de',\n"," 'una',\n"," 'cri',\n"," 'minal',\n"," '(',\n"," 'ah',\n"," ',',\n"," 'ah',\n"," ')',\n"," 'Esa',\n"," 'que',\n"," 'el',\n"," 'gatillo',\n"," 'le',\n"," 'gusta',\n"," 'jalar',\n"," '(',\n"," 'rata',\n"," '-',\n"," 'ta',\n"," ')',\n"," 'Que',\n"," 'le',\n"," 'guste',\n"," 'flotar',\n"," 'y',\n"," 'fumar',\n"," 'Tussi',\n"," ',',\n"," 'keta',\n"," 'quiere',\n"," \"'\",\n"," 'mezclar',\n"," 'Dimelo',\n"," 'm√°',\n"," 'Ando',\n"," 'en',\n"," 'busca',\n"," 'de',\n"," 'una',\n"," 'criminal',\n"," '(',\n"," 'ah',\n"," ',',\n"," 'ah',\n"," ')',\n"," 'Esa',\n"," 'que',\n"," 'el',\n"," 'gatillo',\n"," 'le',\n"," 'gusta',\n"," 'jalar',\n"," '(',\n"," 'rata',\n"," '-',\n"," 'ta',\n"," ')',\n"," 'Que',\n"," 'le',\n"," 'guste',\n"," 'flotar',\n"," 'y',\n"," 'fumar',\n"," 'Tussi',\n"," ',',\n"," 'keta',\n"," 'pura',\n"," 'quiere',\n"," \"'\",\n"," 'mezclar',\n"," 'Marcianeke',\n"," ',',\n"," 'Pailita',\n"," 'Young',\n"," 'Varas']"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"TPbgTvAW-stF"},"source":["**Describa cu√°les fueron sus supuestos para realizar la tokenizaci√≥n y compare sus tokens con los entregados por la librer√≠a nltk en el bloque de c√≥digo de m√°s abajo.**"]},{"cell_type":"markdown","metadata":{"id":"jGQ7CJy3-3aH"},"source":["Supuestos aqui\n"]},{"cell_type":"code","metadata":{"id":"YYtmAXTr9KXK","executionInfo":{"status":"ok","timestamp":1681443317564,"user_tz":240,"elapsed":1915,"user":{"displayName":"Consuelo Rojas","userId":"01251266957192768061"}},"outputId":"adf55e22-c303-4228-cb2e-38da13e61bea","colab":{"base_uri":"https://localhost:8080/"}},"source":["from nltk.tokenize import wordpunct_tokenize\n","nltk_tokens = wordpunct_tokenize(text)\n","nltk_tokens"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Brr',\n"," 'Marcianeke',\n"," 'Vamo',\n"," \"'\",\n"," 'a',\n"," 'estar',\n"," 'con',\n"," 'Pailita',\n"," 'Dimelo',\n"," 'm√°',\n"," 'Ando',\n"," 'en',\n"," 'busca',\n"," 'de',\n"," 'una',\n"," 'criminal',\n"," '(',\n"," 'ah',\n"," ',',\n"," 'ah',\n"," ')',\n"," 'Esa',\n"," 'que',\n"," 'el',\n"," 'gatillo',\n"," 'le',\n"," 'gusta',\n"," 'jalar',\n"," '(',\n"," 'rata',\n"," '-',\n"," 'ta',\n"," ')',\n"," 'Que',\n"," 'le',\n"," 'guste',\n"," 'flotar',\n"," 'y',\n"," 'fumar',\n"," '(',\n"," 'brr',\n"," ')',\n"," 'Tussi',\n"," ',',\n"," 'keta',\n"," 'quiere',\n"," \"'\",\n"," 'mezclar',\n"," 'Dimelo',\n"," 'm√°',\n"," 'Ando',\n"," 'en',\n"," 'busca',\n"," 'de',\n"," 'una',\n"," 'criminal',\n"," '(',\n"," 'ah',\n"," ',',\n"," 'ah',\n"," ')',\n"," 'Esa',\n"," 'que',\n"," 'el',\n"," 'gatillo',\n"," 'le',\n"," 'gusta',\n"," 'jalar',\n"," '(',\n"," 'rata',\n"," '-',\n"," 'ta',\n"," ')',\n"," 'Que',\n"," 'le',\n"," 'guste',\n"," 'flotar',\n"," 'y',\n"," 'fumar',\n"," 'Tussi',\n"," ',',\n"," 'keta',\n"," 'pura',\n"," 'quiere',\n"," \"'\",\n"," 'mezclar',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Esperame',\n"," 'que',\n"," 'ahora',\n"," 'entro',\n"," 'yo',\n"," 'Y',\n"," 'lo',\n"," 'que',\n"," 'pide',\n"," 'yo',\n"," 'lo',\n"," 'traje',\n"," 'No',\n"," 'visto',\n"," 'de',\n"," 'traje',\n"," 'Puro',\n"," 'corte',\n"," 'calle',\n"," ',',\n"," 'no',\n"," 'de',\n"," 'maquillaje',\n"," 'Pronto',\n"," 'coronamos',\n"," 'y',\n"," 'nos',\n"," 'vamo',\n"," \"'\",\n"," 'de',\n"," 'viaje',\n"," 'Tanto',\n"," 'hit',\n"," 'que',\n"," 'hago',\n"," 'que',\n"," 'lo',\n"," \"'\",\n"," 'culo',\n"," 'bajen',\n"," 'Ella',\n"," 'se',\n"," 'va',\n"," 'de',\n"," 'shopping',\n"," 'Sale',\n"," 'positivo',\n"," 'si',\n"," 'se',\n"," 'hace',\n"," 'el',\n"," 'doping',\n"," 'Baila',\n"," 'twerk',\n"," 'con',\n"," 'un',\n"," 'poco',\n"," 'de',\n"," 'popping',\n"," 'Los',\n"," 'fardos',\n"," 'en',\n"," 'el',\n"," 'bot√≠n',\n"," 'Si',\n"," 'quieren',\n"," 'letra',\n"," 'llamen',\n"," 'pa',\n"," \"'\",\n"," 'mi',\n"," 'booking',\n"," 'Generando',\n"," ',',\n"," 'sigo',\n"," 'en',\n"," 'la',\n"," 'm√≠a',\n"," 'lowkey',\n"," 'Cooking',\n"," 'en',\n"," 'el',\n"," 'estudio',\n"," 'con',\n"," 'tu',\n"," 'woman',\n"," 'Tanto',\n"," 'whisky',\n"," ',',\n"," 'pisco',\n"," 'que',\n"," 'hasta',\n"," 'lo',\n"," \"'\",\n"," 'vecinos',\n"," 'toman',\n"," 'Si',\n"," 'se',\n"," 'tiran',\n"," 'pa',\n"," \"'\",\n"," 'aca',\n"," 'puede',\n"," 'que',\n"," 'la',\n"," 'arena',\n"," 'coman',\n"," 'Ja',\n"," ',',\n"," 'en',\n"," 'el',\n"," 'chanteo',\n"," 'titulado',\n"," 'sin',\n"," 'diploma',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Di',\n"," '-',\n"," 'dimelo',\n"," 'm√°',\n"," 'Ah',\n"," ',',\n"," 'pe',\n"," '-',\n"," 'peligrosa',\n"," 'Quiero',\n"," 'ver',\n"," 'como',\n"," 'perreando',\n"," 'me',\n"," 'acosa',\n"," 'Eso',\n"," 'de',\n"," 'atra',\n"," \"'\",\n"," 'con',\n"," 'el',\n"," 'Gucci',\n"," 'me',\n"," 'lo',\n"," 'roza',\n"," 'Tengo',\n"," 'tussi',\n"," 'del',\n"," 'naranjo',\n"," 'me',\n"," 'aburrio',\n"," 'el',\n"," 'rosa',\n"," 'Capaz',\n"," 'que',\n"," 'tosa',\n"," 'con',\n"," 'el',\n"," 'blunt',\n"," 'Sprite',\n"," 'con',\n"," 'Flemibron',\n"," 'Louis',\n"," 'Vuitton',\n"," ',',\n"," 'le',\n"," 'quito',\n"," 'la',\n"," 'polera',\n"," 'Champion',\n"," 'A',\n"," 'tu',\n"," 'pretendiente',\n"," 'con',\n"," 'la',\n"," 'fory',\n"," 'lo',\n"," 'espanto',\n"," 'Puro',\n"," 'perro',\n"," ',',\n"," 'le',\n"," 'doy',\n"," 'de',\n"," 'comer',\n"," 'Champion',\n"," 'Dog',\n"," 'Ese',\n"," 'toto',\n"," 'lo',\n"," 'corono',\n"," 'yo',\n"," 'La',\n"," 'movie',\n"," 'en',\n"," 'play',\n"," 'no',\n"," 'hay',\n"," 'stop',\n"," 'Flow',\n"," 'de',\n"," 'sobra',\n"," 'no',\n"," 'hay',\n"," 'stock',\n"," 'Me',\n"," 'la',\n"," 'topo',\n"," 'en',\n"," 'la',\n"," 'disco',\n"," 'queda',\n"," 'en',\n"," 'shock',\n"," 'My',\n"," 'love',\n"," ',',\n"," 'rica',\n"," 'en',\n"," 'las',\n"," 'redes',\n"," 'y',\n"," 'en',\n"," 'persona',\n"," 'No',\n"," 'usa',\n"," 'Photoshop',\n"," 'La',\n"," 'llevo',\n"," 'a',\n"," 'comprar',\n"," 'blone',\n"," \"'\",\n"," 'al',\n"," 'growshop',\n"," 'En',\n"," 'ropa',\n"," 'interior',\n"," 'los',\n"," 'do',\n"," \"'\",\n"," 'Me',\n"," 'roza',\n"," 'su',\n"," 'vicky',\n"," 'con',\n"," 'mi',\n"," 'boxer',\n"," 'Top',\n"," 'Dimelo',\n"," 'm√°',\n"," 'Ando',\n"," 'en',\n"," 'busca',\n"," 'de',\n"," 'una',\n"," 'cri',\n"," 'minal',\n"," '(',\n"," 'ah',\n"," ',',\n"," 'ah',\n"," ')',\n"," 'Esa',\n"," 'que',\n"," 'el',\n"," 'gatillo',\n"," 'le',\n"," 'gusta',\n"," 'jalar',\n"," '(',\n"," 'rata',\n"," '-',\n"," 'ta',\n"," ')',\n"," 'Que',\n"," 'le',\n"," 'guste',\n"," 'flotar',\n"," 'y',\n"," 'fumar',\n"," 'Tussi',\n"," ',',\n"," 'keta',\n"," 'quiere',\n"," \"'\",\n"," 'mezclar',\n"," 'Dimelo',\n"," 'm√°',\n"," 'Ando',\n"," 'en',\n"," 'busca',\n"," 'de',\n"," 'una',\n"," 'criminal',\n"," '(',\n"," 'ah',\n"," ',',\n"," 'ah',\n"," ')',\n"," 'Esa',\n"," 'que',\n"," 'el',\n"," 'gatillo',\n"," 'le',\n"," 'gusta',\n"," 'jalar',\n"," '(',\n"," 'rata',\n"," '-',\n"," 'ta',\n"," ')',\n"," 'Que',\n"," 'le',\n"," 'guste',\n"," 'flotar',\n"," 'y',\n"," 'fumar',\n"," 'Tussi',\n"," ',',\n"," 'keta',\n"," 'pura',\n"," 'quiere',\n"," \"'\",\n"," 'mezclar',\n"," 'Marcianeke',\n"," ',',\n"," 'Pailita',\n"," 'Young',\n"," 'Varas']"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"s5QKlXAZwN1L"},"source":["` `  \n","` `\n","\n","**Ejercicio 2 - *Stopwords y Stemming* (1 punto).**\n","` `  \n","` `\n","\n","Considere el siguiente corpus:\n"]},{"cell_type":"code","metadata":{"id":"sEp83zESwb2j"},"source":["dataset = [\"I like human languages\", \"I like programming languages\", \"Spanish is my favorite language\"]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gmjdlJWuyS2E"},"source":["Dise√±e una funci√≥n **`get_vocab()`** que extraiga los tokens de este corpus solamente tokenizando. Puede utilizar la funci√≥n del Ejercicio 1."]},{"cell_type":"code","metadata":{"id":"UudC-b6TzZgw"},"source":["def get_vocab(dataset):\n","  ### Aqu√≠ inicia tu c√≥digo ###\n","\n","  tokens = []\n","  for sent in dataset:\n","    tokens += get_tokens(sent)\n","  return list(set(tokens))\n","\n","  ### Aqu√≠ termina tu c√≥digo ###"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5-m32IoNmSwM"},"source":["***Test:***"]},{"cell_type":"code","metadata":{"id":"BNzPKiAx0Aa1","executionInfo":{"status":"ok","timestamp":1681443317567,"user_tz":240,"elapsed":59,"user":{"displayName":"Consuelo Rojas","userId":"01251266957192768061"}},"outputId":"06f4366a-68aa-4d93-d717-8c2ed8779db6","colab":{"base_uri":"https://localhost:8080/"}},"source":["vocab = get_vocab(dataset)\n","vocab"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Spanish',\n"," 'favorite',\n"," 'languages',\n"," 'I',\n"," 'my',\n"," 'language',\n"," 'programming',\n"," 'like',\n"," 'human',\n"," 'is']"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","metadata":{"id":"qZLV2hWf9FN7"},"source":["``\n","``\n","\n","***Resultado esperado***:\n","<table>\n","    <tr>\n","        <td>['favorite',\n"," 'Spanish',\n"," 'language',\n"," 'I',\n"," 'like',\n"," 'programming',\n"," 'languages',\n"," 'my',\n"," 'human',\n"," 'is'] </td>\n","    </tr>\n","</table>\n","\n","``\n","``"]},{"cell_type":"markdown","metadata":{"id":"L3KB0fL2zk2v"},"source":["Ahora dise√±e reglas que usted estime convenientes tanto de **Stemming** como de **Stopwords**. Implemente una funci√≥n que reciba una lista con los elementos del vocabulario, le aplique sus reglas y devuelva el vocabulario actualizado."]},{"cell_type":"markdown","metadata":{"id":"iY7g67Ml0aby"},"source":["    Explique sus reglas aqu√≠:\n"]},{"cell_type":"code","source":["def pre_processing(vocab):\n","  ### Aqu√≠ inicia tu c√≥digo ###\n","  new_vocab = []\n","  stopwords = ['I', 'is', 'my']\n","  for word in vocab:\n","    if word not in stopwords:\n","      if word.endswith('s'):\n","        new_vocab.append(word[:-1])\n","      elif word.endswith('ing'):\n","        new_vocab.append(word[:-3])\n","      else:\n","        new_vocab.append(word)\n","  return list(set(new_vocab))\n","  ### Aqu√≠ termina tu c√≥digo ###\n",""],"metadata":{"id":"CwQS8lcLJczI"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"onOSuS-_mL2F","executionInfo":{"status":"ok","timestamp":1681443317568,"user_tz":240,"elapsed":44,"user":{"displayName":"Consuelo Rojas","userId":"01251266957192768061"}},"outputId":"59908a98-7664-4d7b-be58-809d9774c0f2","colab":{"base_uri":"https://localhost:8080/"}},"source":["vocab = pre_processing(vocab)\n","vocab"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Spanish', 'favorite', 'language', 'like', 'human', 'programm']"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","metadata":{"id":"65IwHx11uA75"},"source":["\n","**Ejercicio 3 - *Bag of Words* üê∂üêà(0.5 puntos).**\n","\n","\n","\n","Considere el siguiente corpus, donde cada elemento del arreglo representa un documento:\n","\n","**disclaimer: El orden de los resultados pueden variar**"]},{"cell_type":"code","metadata":{"id":"Rh-utMuozhsK"},"source":["d0 = 'El perro se come la comida y despu√©s se duerme'\n","d1 = 'El perro se despierta y despu√©s empieza a ladrar'\n","d2 = 'El perro ladra y despu√©s se come la comida'\n","d3 = 'El gato se come la comida y despu√©s se duerme'\n","d4 = 'El gato se despierta y despu√©s empieza a maullar'\n","d5 = 'El gato maulla y despu√©s se come la comida'\n","dataset = [d0, d1, d2, d3, d4, d5]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WH7ne8C6ltvE"},"source":["El objetivo de este ejercicio es determinar cu√°les de  los documentos entregados son los m√°s similares entre s√≠. Para ello utilizaremos la t√©cnica TF-IDF.\n","\n","Como los algoritmos de Machine Learning no comprenden el texto en lenguaje natural, estos documentos deben ser convertidos a vectores num√©ricos. La representaci√≥n m√°s simple vista en clases es el **Bag of Words**, m√©todo mediante el cu√°l se cuentan las apariciones de cada palabra en cada uno de los documentos entregados.\n","\n","Implemente la funci√≥n **`bag_of_words()`**, que reciba como input un arreglo de documentos y devuelva un pandas dataframe con la representaci√≥n Bag of Words de los documentos entregados. En esta representaci√≥n las columnas son el vocabulario y las filas representa las apariciones de cada una de las palabras en los documentos. En otras palabras, cada fila representa el bow de un determinado documento.\n","\n","\n","Por ejemplo para el siguiente dataset:\n","\n","```\n","dataset = ['El perro ladra', 'El perro come']\n","```\n","\n","Debiese entregarnos lo siguiente:\n","\n","\n","|   | el | perro | ladra | come |\n","|---|----|-------|------|-------|\n","| 0 | 1  | 1     | 1    | 0     |\n","| 1 | 1  | 1     | 0    | 1     |\n","\n"]},{"cell_type":"code","metadata":{"id":"kXDMAyFmnq5j"},"source":["def bag_of_words(dataset):\n","  ### Aqu√≠ inicia tu c√≥digo ###\n","  all_bow = []\n","  for document in dataset:\n","      current_bow = {word: 0 for word in get_vocab(dataset)}\n","      for word in get_tokens(document):\n","          current_bow[word] += 1\n","      all_bow.append(current_bow)\n","  return pd.DataFrame(all_bow, index = ['d0', 'd1', 'd2', 'd3', 'd4', 'd5'])\n","  ### Aqu√≠ termina tu c√≥digo ###"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"okfo-nEQmW1R"},"source":["***Test:***"]},{"cell_type":"code","metadata":{"id":"T_Kk9GwCoDW8","executionInfo":{"status":"ok","timestamp":1681443317571,"user_tz":240,"elapsed":41,"user":{"displayName":"Consuelo Rojas","userId":"01251266957192768061"}},"outputId":"d9da51e4-bca6-46d9-a8c6-fd487248fbd3","colab":{"base_uri":"https://localhost:8080/","height":301}},"source":["dataset_bow = bag_of_words(dataset)\n","dataset_bow"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    a  comida  El  se  y  maullar  come  ladra  despierta  ladrar  maulla  \\\n","d0  0       1   1   2  1        0     1      0          0       0       0   \n","d1  1       0   1   1  1        0     0      0          1       1       0   \n","d2  0       1   1   1  1        0     1      1          0       0       0   \n","d3  0       1   1   2  1        0     1      0          0       0       0   \n","d4  1       0   1   1  1        1     0      0          1       0       0   \n","d5  0       1   1   1  1        0     1      0          0       0       1   \n","\n","    gato  despu√©s  la  perro  empieza  duerme  \n","d0     0        1   1      1        0       1  \n","d1     0        1   0      1        1       0  \n","d2     0        1   1      1        0       0  \n","d3     1        1   1      0        0       1  \n","d4     1        1   0      0        1       0  \n","d5     1        1   1      0        0       0  "],"text/html":["\n","  <div id=\"df-d3c8b1fc-90dd-4aec-867d-094b543a85cf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>a</th>\n","      <th>comida</th>\n","      <th>El</th>\n","      <th>se</th>\n","      <th>y</th>\n","      <th>maullar</th>\n","      <th>come</th>\n","      <th>ladra</th>\n","      <th>despierta</th>\n","      <th>ladrar</th>\n","      <th>maulla</th>\n","      <th>gato</th>\n","      <th>despu√©s</th>\n","      <th>la</th>\n","      <th>perro</th>\n","      <th>empieza</th>\n","      <th>duerme</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>d0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>d1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>d2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>d3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>d4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>d5</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3c8b1fc-90dd-4aec-867d-094b543a85cf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d3c8b1fc-90dd-4aec-867d-094b543a85cf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d3c8b1fc-90dd-4aec-867d-094b543a85cf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"oeR5ADGz-MPa"},"source":["``\n","``\n","\n","***Resultado esperado***:\n","\n","|    | El | perro | se | come | la | comida | y | despu√©s | duerme | despierta | empieza | a | ladrar | ladra | gato | maullar | maulla |\n","|----|---:|------:|---:|-----:|---:|-------:|--:|--------:|-------:|----------:|--------:|--:|-------:|------:|-----:|--------:|-------:|\n","| d0 |  1 |     1 |  2 |    1 |  1 |      1 | 1 |       1 |      1 |         0 |       0 | 0 |      0 |     0 |    0 |       0 |      0 |\n","| d1 |  1 |     1 |  1 |    0 |  0 |      0 | 1 |       1 |      0 |         1 |       1 | 1 |      1 |     0 |    0 |       0 |      0 |\n","| d2 |  1 |     1 |  1 |    1 |  1 |      1 | 1 |       1 |      0 |         0 |       0 | 0 |      0 |     1 |    0 |       0 |      0 |\n","| d3 |  1 |     0 |  2 |    1 |  1 |      1 | 1 |       1 |      1 |         0 |       0 | 0 |      0 |     0 |    1 |       0 |      0 |\n","| d4 |  1 |     0 |  1 |    0 |  0 |      0 | 1 |       1 |      0 |         1 |       1 | 1 |      0 |     0 |    1 |       1 |      0 |\n","| d5 |  1 |     0 |  1 |    1 |  1 |      1 | 1 |       1 |      0 |         0 |       0 | 0 |      0 |     0 |    1 |       0 |      1 |\n","\n","``\n","``"]},{"cell_type":"markdown","metadata":{"id":"K4OXMz7opWcd"},"source":["` `  \n","` `\n","\n","**Ejercicio 4 - *Calcular TF* (0.5 puntos):** Ahora debemos usar el dataframe del ejercicio anterior para calcular la matriz de TF normalizada por la m√°xima frecuencia ${max_i({\\text{tf}_{i,j})}}$, donde\n","i corresponde al √≠ndice de las filas (bow) y j al de las columnas (palabras). Es decir, dividir cada bow en la cantidad de veces de la palabra que aparezca m√°s veces en ese vector.\n","\n","\n","$$\\text{nft}_{i,j} = \\frac{\\text{tf}_{i,j}}{max_i({\\text{tf}_{i,j})}}$$"]},{"cell_type":"code","metadata":{"id":"xWE16xhBpswc"},"source":["def calc_tf(dataset_bow):\n","    ### Aqu√≠ inicia tu c√≥digo ###\n","    return dataset_bow.divide(dataset_bow.max(axis=1), axis=0)\n","    ### Aqu√≠ termina tu c√≥digo ###"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"AZQPZe3JmYqy"},"source":["***Test:***"]},{"cell_type":"code","metadata":{"id":"YQ2h8jEYp4nZ","executionInfo":{"status":"ok","timestamp":1681443317573,"user_tz":240,"elapsed":40,"user":{"displayName":"Consuelo Rojas","userId":"01251266957192768061"}},"outputId":"d5835597-2b5d-4093-8d21-fb2f663982d9","colab":{"base_uri":"https://localhost:8080/","height":301}},"source":["tf = calc_tf(dataset_bow)\n","tf"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      a  comida   El   se    y  maullar  come  ladra  despierta  ladrar  \\\n","d0  0.0     0.5  0.5  1.0  0.5      0.0   0.5    0.0        0.0     0.0   \n","d1  1.0     0.0  1.0  1.0  1.0      0.0   0.0    0.0        1.0     1.0   \n","d2  0.0     1.0  1.0  1.0  1.0      0.0   1.0    1.0        0.0     0.0   \n","d3  0.0     0.5  0.5  1.0  0.5      0.0   0.5    0.0        0.0     0.0   \n","d4  1.0     0.0  1.0  1.0  1.0      1.0   0.0    0.0        1.0     0.0   \n","d5  0.0     1.0  1.0  1.0  1.0      0.0   1.0    0.0        0.0     0.0   \n","\n","    maulla  gato  despu√©s   la  perro  empieza  duerme  \n","d0     0.0   0.0      0.5  0.5    0.5      0.0     0.5  \n","d1     0.0   0.0      1.0  0.0    1.0      1.0     0.0  \n","d2     0.0   0.0      1.0  1.0    1.0      0.0     0.0  \n","d3     0.0   0.5      0.5  0.5    0.0      0.0     0.5  \n","d4     0.0   1.0      1.0  0.0    0.0      1.0     0.0  \n","d5     1.0   1.0      1.0  1.0    0.0      0.0     0.0  "],"text/html":["\n","  <div id=\"df-e2e3074a-81e8-4559-bdc3-c75425b18e80\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>a</th>\n","      <th>comida</th>\n","      <th>El</th>\n","      <th>se</th>\n","      <th>y</th>\n","      <th>maullar</th>\n","      <th>come</th>\n","      <th>ladra</th>\n","      <th>despierta</th>\n","      <th>ladrar</th>\n","      <th>maulla</th>\n","      <th>gato</th>\n","      <th>despu√©s</th>\n","      <th>la</th>\n","      <th>perro</th>\n","      <th>empieza</th>\n","      <th>duerme</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>d0</th>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","    </tr>\n","    <tr>\n","      <th>d1</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>d2</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>d3</th>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.5</td>\n","    </tr>\n","    <tr>\n","      <th>d4</th>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>d5</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2e3074a-81e8-4559-bdc3-c75425b18e80')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e2e3074a-81e8-4559-bdc3-c75425b18e80 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e2e3074a-81e8-4559-bdc3-c75425b18e80');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","metadata":{"id":"TOzdRwx9_UMM"},"source":["``\n","``\n","\n","***Resultado esperado***:\n","\n","|    |  El | perro |  se | come |  la | comida |   y | despu√©s | duerme | despierta | empieza |   a | ladrar | ladra | gato | maullar | maulla |\n","|----|----:|------:|----:|-----:|----:|-------:|----:|--------:|-------:|----------:|--------:|----:|-------:|------:|-----:|--------:|-------:|\n","| d0 | 0.5 |   0.5 | 1.0 |  0.5 | 0.5 |    0.5 | 0.5 |     0.5 |    0.5 |       0.0 |     0.0 | 0.0 |    0.0 |   0.0 |  0.0 |     0.0 |    0.0 |\n","| d1 | 1.0 |   1.0 | 1.0 |  0.0 | 0.0 |    0.0 | 1.0 |     1.0 |    0.0 |       1.0 |     1.0 | 1.0 |    1.0 |   0.0 |  0.0 |     0.0 |    0.0 |\n","| d2 | 1.0 |   1.0 | 1.0 |  1.0 | 1.0 |    1.0 | 1.0 |     1.0 |    0.0 |       0.0 |     0.0 | 0.0 |    0.0 |   1.0 |  0.0 |     0.0 |    0.0 |\n","| d3 | 0.5 |   0.0 | 1.0 |  0.5 | 0.5 |    0.5 | 0.5 |     0.5 |    0.5 |       0.0 |     0.0 | 0.0 |    0.0 |   0.0 |  0.5 |     0.0 |    0.0 |\n","| d4 | 1.0 |   0.0 | 1.0 |  0.0 | 0.0 |    0.0 | 1.0 |     1.0 |    0.0 |       1.0 |     1.0 | 1.0 |    0.0 |   0.0 |  1.0 |     1.0 |    0.0 |\n","| d5 | 1.0 |   0.0 | 1.0 |  1.0 | 1.0 |    1.0 | 1.0 |     1.0 |    0.0 |       0.0 |     0.0 | 0.0 |    0.0 |   0.0 |  1.0 |     0.0 |    1.0 |\n","\n","``\n","``"]},{"cell_type":"markdown","metadata":{"id":"ZqgW4Ni4t0xC"},"source":["` `  \n","` `\n","\n","**Ejercicio 5 - *Calcular IDF* (0.5 punto):**\n","\n","\n","Implementar `calc_idf(dataset_bow)`. Este debe retornar un diccionario en donde las llaves sean las palabras y los valores sean el calculo de cada idf por palabra.\n","\n","Recordar que $idf_{t_i} = log_{10}\\frac{N}{n_i}$ con $N = $ n√∫mero de documentos y $n_i = $ N√∫mero de documentos que contienen la palabra $t_i$"]},{"cell_type":"code","metadata":{"id":"thhDY1-Ht6T5"},"source":["def calc_idf(dataset_bow):\n","    ### Aqu√≠ inicia tu c√≥digo ###\n","    number_of_docs = len(dataset_bow)\n","    idf = {}\n","    for word in dataset_bow:\n","        n_i = (dataset_bow[[word]] != 0).sum()[0]\n","        idf[word] = np.log10(number_of_docs/n_i)\n","    return idf\n","    ### Aqu√≠ termina tu c√≥digo ###"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"yR_j3pYemcAc"},"source":["***Test:***"]},{"cell_type":"code","metadata":{"id":"ro-OMGpduC0R","executionInfo":{"status":"ok","timestamp":1681443317576,"user_tz":240,"elapsed":39,"user":{"displayName":"Consuelo Rojas","userId":"01251266957192768061"}},"outputId":"9ffdc645-d4e4-4397-e977-cbde18b8bedf","colab":{"base_uri":"https://localhost:8080/"}},"source":["idf = calc_idf(dataset_bow)\n","idf"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'a': 0.47712125471966244,\n"," 'comida': 0.17609125905568124,\n"," 'El': 0.0,\n"," 'se': 0.0,\n"," 'y': 0.0,\n"," 'maullar': 0.7781512503836436,\n"," 'come': 0.17609125905568124,\n"," 'ladra': 0.7781512503836436,\n"," 'despierta': 0.47712125471966244,\n"," 'ladrar': 0.7781512503836436,\n"," 'maulla': 0.7781512503836436,\n"," 'gato': 0.3010299956639812,\n"," 'despu√©s': 0.0,\n"," 'la': 0.17609125905568124,\n"," 'perro': 0.3010299956639812,\n"," 'empieza': 0.47712125471966244,\n"," 'duerme': 0.47712125471966244}"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["***Resultado esperado***:\n","\n","```python\n","{'El': 0.0,\n"," 'a': 0.47712125471966244,\n"," 'come': 0.17609125905568124,\n"," 'comida': 0.17609125905568124,\n"," 'despierta': 0.47712125471966244,\n"," 'despu√©s': 0.0,\n"," 'duerme': 0.47712125471966244,\n"," 'empieza': 0.47712125471966244,\n"," 'gato': 0.3010299956639812,\n"," 'la': 0.17609125905568124,\n"," 'ladra': 0.7781512503836436,\n"," 'ladrar': 0.7781512503836436,\n"," 'maulla': 0.7781512503836436,\n"," 'maullar': 0.7781512503836436,\n"," 'perro': 0.3010299956639812,\n"," 'se': 0.0,\n"," 'y': 0.0}\n","```"],"metadata":{"id":"Ioy_HicQDr-a"}},{"cell_type":"markdown","metadata":{"id":"IzKAzJtSJ7gx"},"source":["Puede notar el bajo puntaje otorgado a las palabras que m√°s se repiten! üòÆ"]},{"cell_type":"markdown","metadata":{"id":"D17lm6l9uJPo"},"source":["**Ejercicio 6 - *Calcular TF-IDF & concluir similitud de documentos.* (1 punto)**\n"]},{"cell_type":"markdown","metadata":{"id":"bc7FTQ19Kcwo"},"source":["Programe la funci√≥n `calc_tf_idf(tf, idf)` que entrega el dataframe TF-IDF asociado al dataset que estamos analizando."]},{"cell_type":"code","metadata":{"id":"9knMl0KguMwo"},"source":["def calc_tf_idf(tf, idf):\n","    ### Aqu√≠ inicia tu c√≥digo ###\n","\n","    return tf * idf\n","\n","    ### Aqu√≠ termina tu c√≥digo ###"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tRzIr1nQmepp"},"source":["***Test.***"]},{"cell_type":"code","metadata":{"id":"H8z6jaq2uPEo","executionInfo":{"status":"ok","timestamp":1681443317577,"user_tz":240,"elapsed":33,"user":{"displayName":"Consuelo Rojas","userId":"01251266957192768061"}},"outputId":"438b5672-7fad-4d73-dc50-553e2801431b","colab":{"base_uri":"https://localhost:8080/","height":301}},"source":["tf_idf = calc_tf_idf(tf, idf)\n","tf_idf"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           a    comida   El   se    y   maullar      come     ladra  \\\n","d0  0.000000  0.088046  0.0  0.0  0.0  0.000000  0.088046  0.000000   \n","d1  0.477121  0.000000  0.0  0.0  0.0  0.000000  0.000000  0.000000   \n","d2  0.000000  0.176091  0.0  0.0  0.0  0.000000  0.176091  0.778151   \n","d3  0.000000  0.088046  0.0  0.0  0.0  0.000000  0.088046  0.000000   \n","d4  0.477121  0.000000  0.0  0.0  0.0  0.778151  0.000000  0.000000   \n","d5  0.000000  0.176091  0.0  0.0  0.0  0.000000  0.176091  0.000000   \n","\n","    despierta    ladrar    maulla      gato  despu√©s        la     perro  \\\n","d0   0.000000  0.000000  0.000000  0.000000      0.0  0.088046  0.150515   \n","d1   0.477121  0.778151  0.000000  0.000000      0.0  0.000000  0.301030   \n","d2   0.000000  0.000000  0.000000  0.000000      0.0  0.176091  0.301030   \n","d3   0.000000  0.000000  0.000000  0.150515      0.0  0.088046  0.000000   \n","d4   0.477121  0.000000  0.000000  0.301030      0.0  0.000000  0.000000   \n","d5   0.000000  0.000000  0.778151  0.301030      0.0  0.176091  0.000000   \n","\n","     empieza    duerme  \n","d0  0.000000  0.238561  \n","d1  0.477121  0.000000  \n","d2  0.000000  0.000000  \n","d3  0.000000  0.238561  \n","d4  0.477121  0.000000  \n","d5  0.000000  0.000000  "],"text/html":["\n","  <div id=\"df-b15be020-b219-4597-bc4d-832ee145793b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>a</th>\n","      <th>comida</th>\n","      <th>El</th>\n","      <th>se</th>\n","      <th>y</th>\n","      <th>maullar</th>\n","      <th>come</th>\n","      <th>ladra</th>\n","      <th>despierta</th>\n","      <th>ladrar</th>\n","      <th>maulla</th>\n","      <th>gato</th>\n","      <th>despu√©s</th>\n","      <th>la</th>\n","      <th>perro</th>\n","      <th>empieza</th>\n","      <th>duerme</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>d0</th>\n","      <td>0.000000</td>\n","      <td>0.088046</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.088046</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.088046</td>\n","      <td>0.150515</td>\n","      <td>0.000000</td>\n","      <td>0.238561</td>\n","    </tr>\n","    <tr>\n","      <th>d1</th>\n","      <td>0.477121</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.477121</td>\n","      <td>0.778151</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.301030</td>\n","      <td>0.477121</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>d2</th>\n","      <td>0.000000</td>\n","      <td>0.176091</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.176091</td>\n","      <td>0.778151</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.176091</td>\n","      <td>0.301030</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>d3</th>\n","      <td>0.000000</td>\n","      <td>0.088046</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.088046</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.150515</td>\n","      <td>0.0</td>\n","      <td>0.088046</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.238561</td>\n","    </tr>\n","    <tr>\n","      <th>d4</th>\n","      <td>0.477121</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.778151</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.477121</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.301030</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.477121</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>d5</th>\n","      <td>0.000000</td>\n","      <td>0.176091</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.176091</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.778151</td>\n","      <td>0.301030</td>\n","      <td>0.0</td>\n","      <td>0.176091</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b15be020-b219-4597-bc4d-832ee145793b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b15be020-b219-4597-bc4d-832ee145793b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b15be020-b219-4597-bc4d-832ee145793b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"ZBG2qfwv_6HK"},"source":["``\n","``\n","\n","***Resultado esperado***:\n","\n","|    |  El |    perro |  se |     come |       la |   comida |   y | despu√©s |   duerme | despierta |  empieza |        a |   ladrar |    ladra |     gato |  maullar |   maulla |\n","|----|----:|---------:|----:|---------:|---------:|---------:|----:|--------:|---------:|----------:|---------:|---------:|---------:|---------:|---------:|---------:|---------:|\n","| d0 | 0.0 | 0.150515 | 0.0 | 0.088046 | 0.088046 | 0.088046 | 0.0 |     0.0 | 0.238561 |  0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 |\n","| d1 | 0.0 | 0.301030 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.0 |     0.0 | 0.000000 |  0.477121 | 0.477121 | 0.477121 | 0.778151 | 0.000000 | 0.000000 | 0.000000 | 0.000000 |\n","| d2 | 0.0 | 0.301030 | 0.0 | 0.176091 | 0.176091 | 0.176091 | 0.0 |     0.0 | 0.000000 |  0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.778151 | 0.000000 | 0.000000 | 0.000000 |\n","| d3 | 0.0 | 0.000000 | 0.0 | 0.088046 | 0.088046 | 0.088046 | 0.0 |     0.0 | 0.238561 |  0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.150515 | 0.000000 | 0.000000 |\n","| d4 | 0.0 | 0.000000 | 0.0 | 0.000000 | 0.000000 | 0.000000 | 0.0 |     0.0 | 0.000000 |  0.477121 | 0.477121 | 0.477121 | 0.000000 | 0.000000 | 0.301030 | 0.778151 | 0.000000 |\n","| d5 | 0.0 | 0.000000 | 0.0 | 0.176091 | 0.176091 | 0.176091 | 0.0 |     0.0 | 0.000000 |  0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.301030 | 0.000000 | 0.778151 |\n","\n","\n","``\n","``"]},{"cell_type":"markdown","metadata":{"id":"WmVlbpzMp5NU"},"source":["Ahora que tenemos el dataframe de TF-IDF, nos queda calcular la similitud coseno entre todos los vectores. Notar que la matriz resultante ser√° una matriz sim√©trica. Implemente la funci√≥n *cosine_similarity(v1, v2)* que recibe dos vectores (v1 y v2) y calcula la similitud coseno entre ambos vectores. Concluya cu√°les son los dos documentos m√°s similares."]},{"cell_type":"code","metadata":{"id":"HEgUtgBkQAae"},"source":["def cosine_similarity(v1, v2):\n","  ### Aqu√≠ inicia tu c√≥digo ###\n","\n","  return np.dot(v1,v2)/(np.linalg.norm(v1)*np.linalg.norm(v2))\n","\n","  ### Aqu√≠ termina tu c√≥digo ###\n","\n","similarity_matrix = np.zeros((6,6))\n","for i, v1 in enumerate(tf_idf.index.values):\n","  for j, v2 in enumerate(tf_idf.index.values):\n","      similarity = cosine_similarity(tf_idf.loc[v1].values, tf_idf.loc[v2].values)\n","      similarity_matrix[i][j] = similarity\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FUAc1zX0Lg16"},"source":["![gato](https://live.staticflickr.com/4652/38904147065_0b6c446945_b.jpg)"]},{"cell_type":"markdown","metadata":{"id":"s1A95IaXLHaB"},"source":["**Cualquier recomendaci√≥n que nos quisieran dar para una futura tarea es bienvenid@!**"]}]}